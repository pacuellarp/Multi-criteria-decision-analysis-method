{"ast":null,"code":"var _jsxFileName = \"/home/phoenix/Documentos/2023 II/Multi-criteria-decision-analysis-method/src/results/results.js\";\nimport React from 'react';\nimport BarChart from '../barChart/barChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction decimalAPorcentaje(numeroDecimal) {\n  // Multiplica el número decimal por 100 para obtener el porcentaje\n  const porcentaje = numeroDecimal * 100;\n\n  // Redondea el porcentaje a dos decimales\n  const porcentajeRedondeado = Math.round(porcentaje * 100) / 100;\n\n  // Convierte el resultado a una cadena de texto con el símbolo de porcentaje\n  const porcentajeFormateado = porcentajeRedondeado.toFixed(2);\n  return porcentajeFormateado;\n}\nconst Results = ({\n  resultados,\n  datos,\n  namesAlternativas,\n  vectoresPrioridad\n}) => {\n  let ranking = new Array(namesAlternativas.length).fill(0);\n  for (let i = 1; i <= resultados[0].length; i++) {\n    for (let j = 0; j < namesAlternativas.length; j++) {\n      ranking[j] = ranking[j] + resultados[0][i - 1][resultados[0].length - 1] * resultados[i][j][namesAlternativas.length - 1];\n    }\n  }\n  let rankingPorcentaje = new Array(namesAlternativas.length).fill(0);\n  for (let i = 0; i < rankingPorcentaje.length; i++) {\n    rankingPorcentaje[i] = decimalAPorcentaje(ranking[i]);\n  }\n  ;\n  let axp = new Array(datos.length).fill(0);\n  for (let i = 0; i < datos.length; i++) {\n    for (let j = 0; j < datos[0].length; j++) {\n      axp[i] += datos[i][j] * vectoresPrioridad[0][j];\n    }\n  }\n  let lambdaMax = axp.reduce((acumulador, valor) => acumulador + valor, 0);\n  const ci = (lambdaMax - resultados[0].length) / (resultados[0].length - 1);\n  const ia = 1.98 * (resultados[0].length - 2) / resultados[0].length;\n  const cr = ci / ia;\n  const medidaConsistencia = ['Índice de consistencia (CI)', 'Índice aleatorio (IA)', 'Razón de consistencia (CR)'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Resultados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ranking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [namesAlternativas.map((alternativa, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: alternativa\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ranking[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      namesAlternativas: namesAlternativas,\n      rankingPorcentaje: rankingPorcentaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Medida de Consistencia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: medidaConsistencia.map((medida, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: medida\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: index === 0 ? ci : index === 1 ? ia : cr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","BarChart","jsxDEV","_jsxDEV","decimalAPorcentaje","numeroDecimal","porcentaje","porcentajeRedondeado","Math","round","porcentajeFormateado","toFixed","Results","resultados","datos","namesAlternativas","vectoresPrioridad","ranking","Array","length","fill","i","j","rankingPorcentaje","axp","lambdaMax","reduce","acumulador","valor","ci","ia","cr","medidaConsistencia","children","fileName","_jsxFileName","lineNumber","columnNumber","map","alternativa","index","medida","_c","$RefreshReg$"],"sources":["/home/phoenix/Documentos/2023 II/Multi-criteria-decision-analysis-method/src/results/results.js"],"sourcesContent":["import React from 'react';\nimport BarChart from '../barChart/barChart';\n\nfunction decimalAPorcentaje(numeroDecimal) {\n    // Multiplica el número decimal por 100 para obtener el porcentaje\n    const porcentaje = numeroDecimal * 100;\n\n    // Redondea el porcentaje a dos decimales\n    const porcentajeRedondeado = Math.round(porcentaje * 100) / 100;\n\n    // Convierte el resultado a una cadena de texto con el símbolo de porcentaje\n    const porcentajeFormateado = porcentajeRedondeado.toFixed(2);\n\n    return porcentajeFormateado;\n}\n\nconst Results = ({resultados,datos,namesAlternativas, vectoresPrioridad}) =>{  \n\n    let ranking = new Array(namesAlternativas.length).fill(0)\n\n    for (let i=1;i<=resultados[0].length;i++){\n        for (let j=0;j<namesAlternativas.length;j++){\n            ranking[j]=ranking[j]+(resultados[0][i-1][resultados[0].length-1]*resultados[i][j][namesAlternativas.length-1])\n        }\n    }\n\n    let rankingPorcentaje = new Array(namesAlternativas.length).fill(0);\n\n    for(let i=0;i<rankingPorcentaje.length;i++){\n        rankingPorcentaje[i]=(decimalAPorcentaje(ranking[i]))\n    };\n\n    let axp = new Array(datos.length).fill(0);\n\n\n    for (let i = 0; i < datos.length; i++) {\n        for (let j = 0; j < datos[0].length; j++) {\n            axp[i] += datos[i][j] * vectoresPrioridad[0][j];\n        }\n    }\n\n    let lambdaMax = axp.reduce((acumulador, valor) => acumulador + valor, 0);\n\n    const ci = (lambdaMax-resultados[0].length)/(resultados[0].length-1);\n\n    const ia = 1.98*(resultados[0].length-2)/resultados[0].length;\n\n    const cr = ci/ia;\n\n    const medidaConsistencia = ['Índice de consistencia (CI)','Índice aleatorio (IA)','Razón de consistencia (CR)']\n\n\n    return(\n        <div>\n        <h2>Resultados</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Ranking</th>\n            </tr>\n          </thead>\n          <tbody>\n            {namesAlternativas.map((alternativa, index) => (\n              <tr key={index}>\n                <td>{alternativa}</td>\n                <td>{ranking[index]}</td>\n              </tr>\n            ))}\n            <tr>\n              <td>Total</td>\n              <td>1</td>\n            </tr>\n          </tbody>\n        </table>\n        <BarChart namesAlternativas={namesAlternativas} rankingPorcentaje={rankingPorcentaje} />\n        <table>\n          <thead>\n          <tr>\n              <th>Medida de Consistencia</th>\n            </tr>\n          </thead>\n          <tbody>\n            {medidaConsistencia.map((medida, index) => (\n              <tr key={index}>\n                <td>{medida}</td>\n                <td>{index === 0 ? ci : index === 1 ? ia : cr}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\nexport default Results;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}